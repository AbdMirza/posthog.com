{
    "id": "posthog-python",
    "hogRef": "0.1",
    "info": {
        "version": "6.0.2",
        "id": "posthog-python",
        "title": "PostHog Python SDK",
        "description": "Integrate PostHog into any python application.",
        "slugPrefix": "posthog-python",
        "specUrl": "https://github.com/PostHog/posthog-python"
    },
    "noDocsTypes": [
        "Client",
        "any",
        "int",
        "float",
        "bool",
        "dict",
        "list",
        "str",
        "tuple",
        "set",
        "frozenset",
        "bytes",
        "bytearray",
        "memoryview",
        "range",
        "slice",
        "complex",
        "Union",
        "Optional",
        "Any",
        "Callable",
        "Type",
        "TypeVar",
        "Generic",
        "Literal",
        "ClassVar",
        "Final",
        "Annotated",
        "NotRequired",
        "Required",
        "void",
        "None",
        "NoneType",
        "object",
        "Unpack",
        "BaseException",
        "Exception"
    ],
    "types": [
        {
            "id": "Any",
            "name": "Any",
            "path": "typing.Any",
            "properties": [],
            "example": ""
        },
        {
            "id": "FeatureFlag",
            "name": "FeatureFlag",
            "path": "posthog.types.FeatureFlag",
            "properties": [
                {
                    "name": "key",
                    "type": "str",
                    "description": "Field: key"
                },
                {
                    "name": "enabled",
                    "type": "bool",
                    "description": "Field: enabled"
                },
                {
                    "name": "variant",
                    "type": "Optional[str]",
                    "description": "Field: variant"
                },
                {
                    "name": "reason",
                    "type": "Optional[FlagReason]",
                    "description": "Field: reason"
                },
                {
                    "name": "metadata",
                    "type": "Union[FlagMetadata, LegacyFlagMetadata]",
                    "description": "Field: metadata"
                }
            ],
            "example": ""
        },
        {
            "id": "FeatureFlagResult",
            "name": "FeatureFlagResult",
            "path": "posthog.types.FeatureFlagResult",
            "properties": [
                {
                    "name": "key",
                    "type": "str",
                    "description": "Field: key"
                },
                {
                    "name": "enabled",
                    "type": "bool",
                    "description": "Field: enabled"
                },
                {
                    "name": "variant",
                    "type": "Optional[str]",
                    "description": "Field: variant"
                },
                {
                    "name": "payload",
                    "type": "Optional[Any]",
                    "description": "Field: payload"
                },
                {
                    "name": "reason",
                    "type": "Optional[str]",
                    "description": "Field: reason"
                }
            ],
            "example": ""
        },
        {
            "id": "FlagMetadata",
            "name": "FlagMetadata",
            "path": "posthog.types.FlagMetadata",
            "properties": [
                {
                    "name": "id",
                    "type": "int",
                    "description": "Field: id"
                },
                {
                    "name": "payload",
                    "type": "Optional[str]",
                    "description": "Field: payload"
                },
                {
                    "name": "version",
                    "type": "int",
                    "description": "Field: version"
                },
                {
                    "name": "description",
                    "type": "str",
                    "description": "Field: description"
                }
            ],
            "example": ""
        },
        {
            "id": "FlagReason",
            "name": "FlagReason",
            "path": "posthog.types.FlagReason",
            "properties": [
                {
                    "name": "code",
                    "type": "str",
                    "description": "Field: code"
                },
                {
                    "name": "condition_index",
                    "type": "Optional[int]",
                    "description": "Field: condition_index"
                },
                {
                    "name": "description",
                    "type": "str",
                    "description": "Field: description"
                }
            ],
            "example": ""
        },
        {
            "id": "FlagsAndPayloads",
            "name": "FlagsAndPayloads",
            "path": "posthog.types.FlagsAndPayloads",
            "properties": [
                {
                    "name": "featureFlags",
                    "type": "Optional[dict[str, Union[bool, str]]]",
                    "description": "Field: featureFlags"
                },
                {
                    "name": "featureFlagPayloads",
                    "type": "Optional[dict[str, Any]]",
                    "description": "Field: featureFlagPayloads"
                }
            ],
            "example": ""
        },
        {
            "id": "FlagsResponse",
            "name": "FlagsResponse",
            "path": "posthog.types.FlagsResponse",
            "properties": [
                {
                    "name": "flags",
                    "type": "dict[str, FeatureFlag]",
                    "description": "Field: flags"
                },
                {
                    "name": "errorsWhileComputingFlags",
                    "type": "bool",
                    "description": "Field: errorsWhileComputingFlags"
                },
                {
                    "name": "requestId",
                    "type": "str",
                    "description": "Field: requestId"
                },
                {
                    "name": "quotaLimit",
                    "type": "Optional[list[str]]",
                    "description": "Field: quotaLimit"
                }
            ],
            "example": ""
        },
        {
            "id": "LegacyFlagMetadata",
            "name": "LegacyFlagMetadata",
            "path": "posthog.types.LegacyFlagMetadata",
            "properties": [
                {
                    "name": "payload",
                    "type": "Any",
                    "description": "Field: payload"
                }
            ],
            "example": ""
        },
        {
            "id": "Any",
            "name": "Any",
            "path": "typing.Any",
            "properties": [],
            "example": ""
        },
        {
            "id": "OptionalCaptureArgs",
            "name": "OptionalCaptureArgs",
            "path": "posthog.args.OptionalCaptureArgs",
            "properties": [
                {
                    "name": "distinct_id",
                    "type": "NotRequired[Union[Number, str, UUID, int, any]]",
                    "description": "Field: distinct_id"
                },
                {
                    "name": "properties",
                    "type": "NotRequired[Optional[dict[str, Any]]]",
                    "description": "Field: properties"
                },
                {
                    "name": "timestamp",
                    "type": "NotRequired[Union[datetime, str, any]]",
                    "description": "Field: timestamp"
                },
                {
                    "name": "uuid",
                    "type": "NotRequired[Optional[str]]",
                    "description": "Field: uuid"
                },
                {
                    "name": "groups",
                    "type": "NotRequired[Optional[dict[str, str]]]",
                    "description": "Field: groups"
                },
                {
                    "name": "send_feature_flags",
                    "type": "NotRequired[Optional[bool]]",
                    "description": "Field: send_feature_flags"
                },
                {
                    "name": "disable_geoip",
                    "type": "NotRequired[Optional[bool]]",
                    "description": "Field: disable_geoip"
                }
            ],
            "example": ""
        },
        {
            "id": "OptionalSetArgs",
            "name": "OptionalSetArgs",
            "path": "posthog.args.OptionalSetArgs",
            "properties": [
                {
                    "name": "distinct_id",
                    "type": "NotRequired[Union[Number, str, UUID, int, any]]",
                    "description": "Field: distinct_id"
                },
                {
                    "name": "properties",
                    "type": "NotRequired[Optional[dict[str, Any]]]",
                    "description": "Field: properties"
                },
                {
                    "name": "timestamp",
                    "type": "NotRequired[Union[datetime, str, any]]",
                    "description": "Field: timestamp"
                },
                {
                    "name": "uuid",
                    "type": "NotRequired[Optional[str]]",
                    "description": "Field: uuid"
                },
                {
                    "name": "disable_geoip",
                    "type": "NotRequired[Optional[bool]]",
                    "description": "Field: disable_geoip"
                }
            ],
            "example": ""
        },
        {
            "id": "traceback",
            "name": "traceback",
            "path": "builtins.traceback",
            "properties": [],
            "example": ""
        },
        {
            "id": "UUID",
            "name": "UUID",
            "path": "uuid.UUID",
            "properties": [],
            "example": ""
        },
        {
            "id": "datetime",
            "name": "datetime",
            "path": "datetime.datetime",
            "properties": [],
            "example": ""
        }
    ],
    "classes": [
        {
            "id": "PostHog",
            "title": "PostHog",
            "description": "This is the SDK reference for the PostHog Python SDK.  You can learn more about example usage in the [Python SDK documentation](/docs/libraries/python).  You can also follow [Flask](/docs/libraries/flask) and [Django](/docs/libraries/django)  guides to integrate PostHog into your project.",
            "functions": [
                {
                    "id": "__init__",
                    "title": "Client",
                    "description": "Initialize a new PostHog client instance.",
                    "details": "",
                    "category": "Initialization",
                    "examples": [
                        {
                            "id": "example_1",
                            "name": "Example 1",
                            "code": "from posthog import Posthog\n\nposthog = Posthog('<ph_project_api_key>', host='<ph_app_host>')"
                        }
                    ],
                    "params": [
                        {
                            "name": "project_api_key",
                            "description": "The project API key.",
                            "isOptional": false,
                            "type": "str"
                        },
                        {
                            "name": "host",
                            "description": "The host to use for the client.",
                            "isOptional": true,
                            "type": "any"
                        },
                        {
                            "name": "debug",
                            "description": "Whether to enable debug mode.",
                            "isOptional": true,
                            "type": "bool"
                        },
                        {
                            "name": "max_queue_size",
                            "description": "Parameter: max_queue_size",
                            "isOptional": true,
                            "type": "int"
                        },
                        {
                            "name": "send",
                            "description": "Parameter: send",
                            "isOptional": true,
                            "type": "bool"
                        },
                        {
                            "name": "on_error",
                            "description": "Parameter: on_error",
                            "isOptional": true,
                            "type": "any"
                        },
                        {
                            "name": "flush_at",
                            "description": "Parameter: flush_at",
                            "isOptional": true,
                            "type": "int"
                        },
                        {
                            "name": "flush_interval",
                            "description": "Parameter: flush_interval",
                            "isOptional": true,
                            "type": "float"
                        },
                        {
                            "name": "gzip",
                            "description": "Parameter: gzip",
                            "isOptional": true,
                            "type": "bool"
                        },
                        {
                            "name": "max_retries",
                            "description": "Parameter: max_retries",
                            "isOptional": true,
                            "type": "int"
                        },
                        {
                            "name": "sync_mode",
                            "description": "Parameter: sync_mode",
                            "isOptional": true,
                            "type": "bool"
                        },
                        {
                            "name": "timeout",
                            "description": "Parameter: timeout",
                            "isOptional": true,
                            "type": "int"
                        },
                        {
                            "name": "thread",
                            "description": "Parameter: thread",
                            "isOptional": true,
                            "type": "int"
                        },
                        {
                            "name": "poll_interval",
                            "description": "Parameter: poll_interval",
                            "isOptional": true,
                            "type": "int"
                        },
                        {
                            "name": "personal_api_key",
                            "description": "Parameter: personal_api_key",
                            "isOptional": true,
                            "type": "any"
                        },
                        {
                            "name": "disabled",
                            "description": "Parameter: disabled",
                            "isOptional": true,
                            "type": "bool"
                        },
                        {
                            "name": "disable_geoip",
                            "description": "Parameter: disable_geoip",
                            "isOptional": true,
                            "type": "bool"
                        },
                        {
                            "name": "historical_migration",
                            "description": "Parameter: historical_migration",
                            "isOptional": true,
                            "type": "bool"
                        },
                        {
                            "name": "feature_flags_request_timeout_seconds",
                            "description": "Parameter: feature_flags_request_timeout_seconds",
                            "isOptional": true,
                            "type": "int"
                        },
                        {
                            "name": "super_properties",
                            "description": "Parameter: super_properties",
                            "isOptional": true,
                            "type": "any"
                        },
                        {
                            "name": "enable_exception_autocapture",
                            "description": "Parameter: enable_exception_autocapture",
                            "isOptional": true,
                            "type": "bool"
                        },
                        {
                            "name": "log_captured_exceptions",
                            "description": "Parameter: log_captured_exceptions",
                            "isOptional": true,
                            "type": "bool"
                        },
                        {
                            "name": "project_root",
                            "description": "Parameter: project_root",
                            "isOptional": true,
                            "type": "any"
                        },
                        {
                            "name": "privacy_mode",
                            "description": "Parameter: privacy_mode",
                            "isOptional": true,
                            "type": "bool"
                        },
                        {
                            "name": "before_send",
                            "description": "Parameter: before_send",
                            "isOptional": true,
                            "type": "any"
                        }
                    ],
                    "showDocs": true,
                    "releaseTag": "public",
                    "returnType": {
                        "id": "return_type",
                        "name": "void"
                    }
                },
                {
                    "id": "alias",
                    "title": "alias",
                    "description": "Create an alias between two distinct IDs.",
                    "details": "",
                    "category": "Identification",
                    "examples": [
                        {
                            "id": "example_1",
                            "name": "Example 1",
                            "code": "posthog.alias('anonymous_id', 'user123')"
                        }
                    ],
                    "params": [
                        {
                            "name": "previous_id",
                            "description": "The previous distinct ID.",
                            "isOptional": false,
                            "type": "str"
                        },
                        {
                            "name": "distinct_id",
                            "description": "The new distinct ID to alias to.",
                            "isOptional": true,
                            "type": "str"
                        },
                        {
                            "name": "timestamp",
                            "description": "The timestamp of the event.",
                            "isOptional": true,
                            "type": "any"
                        },
                        {
                            "name": "uuid",
                            "description": "A unique identifier for the event.",
                            "isOptional": true,
                            "type": "any"
                        },
                        {
                            "name": "disable_geoip",
                            "description": "Whether to disable GeoIP for this event.",
                            "isOptional": true,
                            "type": "any"
                        }
                    ],
                    "showDocs": true,
                    "releaseTag": "public",
                    "returnType": {
                        "id": "return_type",
                        "name": "void"
                    }
                },
                {
                    "id": "capture",
                    "title": "capture",
                    "description": "Captures an event manually. [Learn about capture best practices](https://posthog.com/docs/product-analytics/capture-events)",
                    "details": "",
                    "category": "Capture",
                    "examples": [
                        {
                            "id": "example_1",
                            "name": "Example 1",
                            "code": "posthog.capture('user_signed_up', distinct_id='user123')\nposthog.capture('button_clicked', properties={'button_name': 'signup'})"
                        }
                    ],
                    "params": [
                        {
                            "name": "event",
                            "description": "The event name to capture.",
                            "isOptional": false,
                            "type": "str"
                        },
                        {
                            "name": "kwargs",
                            "description": "Parameter: kwargs",
                            "isOptional": false,
                            "type": "Unpack[OptionalCaptureArgs]"
                        }
                    ],
                    "showDocs": true,
                    "releaseTag": "public",
                    "returnType": {
                        "id": "return_type",
                        "name": "Optional[str]"
                    }
                },
                {
                    "id": "capture_exception",
                    "title": "capture_exception",
                    "description": "Capture an exception for error tracking.",
                    "details": "",
                    "category": "Error Tracking",
                    "examples": [
                        {
                            "id": "example_1",
                            "name": "Example 1",
                            "code": "try:\n    # Some code that might fail\n    pass\nexcept Exception as e:\n    posthog.capture_exception(e, distinct_id='user123')"
                        }
                    ],
                    "params": [
                        {
                            "name": "exception",
                            "description": "The exception to capture.",
                            "isOptional": false,
                            "type": "BaseException"
                        },
                        {
                            "name": "kwargs",
                            "description": "Parameter: kwargs",
                            "isOptional": false,
                            "type": "Unpack[OptionalCaptureArgs]"
                        }
                    ],
                    "showDocs": true,
                    "releaseTag": "public",
                    "returnType": {
                        "id": "return_type",
                        "name": "void"
                    }
                },
                {
                    "id": "feature_enabled",
                    "title": "feature_enabled",
                    "description": "Check if a feature flag is enabled for a user.",
                    "details": "",
                    "category": "Feature Flags",
                    "examples": [
                        {
                            "id": "example_1",
                            "name": "Example 1",
                            "code": "if posthog.feature_enabled('new-feature', 'user123'):\n    # Show new feature\n    pass"
                        }
                    ],
                    "params": [
                        {
                            "name": "key",
                            "description": "The feature flag key.",
                            "isOptional": false,
                            "type": "any"
                        },
                        {
                            "name": "distinct_id",
                            "description": "The distinct ID of the user.",
                            "isOptional": false,
                            "type": "any"
                        },
                        {
                            "name": "groups",
                            "description": "A dictionary of group information.",
                            "isOptional": true,
                            "type": "dict"
                        },
                        {
                            "name": "person_properties",
                            "description": "A dictionary of person properties.",
                            "isOptional": true,
                            "type": "dict"
                        },
                        {
                            "name": "group_properties",
                            "description": "A dictionary of group properties.",
                            "isOptional": true,
                            "type": "dict"
                        },
                        {
                            "name": "only_evaluate_locally",
                            "description": "Whether to only evaluate locally.",
                            "isOptional": true,
                            "type": "bool"
                        },
                        {
                            "name": "send_feature_flag_events",
                            "description": "Whether to send feature flag events.",
                            "isOptional": true,
                            "type": "bool"
                        },
                        {
                            "name": "disable_geoip",
                            "description": "Whether to disable GeoIP for this request.",
                            "isOptional": true,
                            "type": "any"
                        }
                    ],
                    "showDocs": true,
                    "releaseTag": "public",
                    "returnType": {
                        "id": "return_type",
                        "name": "void"
                    }
                },
                {
                    "id": "flush",
                    "title": "flush",
                    "description": "Force a flush from the internal queue to the server. Do not use directly, call `shutdown()` instead.  Examples:     ```python     posthog.capture('event_name')     posthog.flush()  # Ensures the event is sent immediately     ```",
                    "details": "",
                    "category": null,
                    "examples": [
                        {
                            "id": "example_1",
                            "name": "Example 1",
                            "code": "posthog.capture('event_name')\nposthog.flush()  # Ensures the event is sent immediately"
                        }
                    ],
                    "params": [],
                    "showDocs": true,
                    "releaseTag": "public",
                    "returnType": {
                        "id": "return_type",
                        "name": "void"
                    }
                },
                {
                    "id": "get_all_flags",
                    "title": "get_all_flags",
                    "description": "Get all feature flags for a user.",
                    "details": "",
                    "category": "Feature Flags",
                    "examples": [
                        {
                            "id": "example_1",
                            "name": "Example 1",
                            "code": "posthog.get_all_flags('distinct_id_of_your_user')"
                        }
                    ],
                    "params": [
                        {
                            "name": "distinct_id",
                            "description": "The distinct ID of the user.",
                            "isOptional": false,
                            "type": "any"
                        },
                        {
                            "name": "groups",
                            "description": "A dictionary of group information.",
                            "isOptional": true,
                            "type": "dict"
                        },
                        {
                            "name": "person_properties",
                            "description": "A dictionary of person properties.",
                            "isOptional": true,
                            "type": "dict"
                        },
                        {
                            "name": "group_properties",
                            "description": "A dictionary of group properties.",
                            "isOptional": true,
                            "type": "dict"
                        },
                        {
                            "name": "only_evaluate_locally",
                            "description": "Whether to only evaluate locally.",
                            "isOptional": true,
                            "type": "bool"
                        },
                        {
                            "name": "disable_geoip",
                            "description": "Whether to disable GeoIP for this request.",
                            "isOptional": true,
                            "type": "any"
                        }
                    ],
                    "showDocs": true,
                    "releaseTag": "public",
                    "returnType": {
                        "id": "return_type",
                        "name": "Optional[dict[str, Union[bool, str]]]"
                    }
                },
                {
                    "id": "get_all_flags_and_payloads",
                    "title": "get_all_flags_and_payloads",
                    "description": "Get all feature flags and their payloads for a user.",
                    "details": "",
                    "category": "Feature Flags",
                    "examples": [
                        {
                            "id": "example_1",
                            "name": "Example 1",
                            "code": "posthog.get_all_flags_and_payloads('distinct_id_of_your_user')"
                        }
                    ],
                    "params": [
                        {
                            "name": "distinct_id",
                            "description": "The distinct ID of the user.",
                            "isOptional": false,
                            "type": "any"
                        },
                        {
                            "name": "groups",
                            "description": "A dictionary of group information.",
                            "isOptional": true,
                            "type": "dict"
                        },
                        {
                            "name": "person_properties",
                            "description": "A dictionary of person properties.",
                            "isOptional": true,
                            "type": "dict"
                        },
                        {
                            "name": "group_properties",
                            "description": "A dictionary of group properties.",
                            "isOptional": true,
                            "type": "dict"
                        },
                        {
                            "name": "only_evaluate_locally",
                            "description": "Whether to only evaluate locally.",
                            "isOptional": true,
                            "type": "bool"
                        },
                        {
                            "name": "disable_geoip",
                            "description": "Whether to disable GeoIP for this request.",
                            "isOptional": true,
                            "type": "any"
                        }
                    ],
                    "showDocs": true,
                    "releaseTag": "public",
                    "returnType": {
                        "id": "return_type",
                        "name": "FlagsAndPayloads"
                    }
                },
                {
                    "id": "get_feature_flag",
                    "title": "get_feature_flag",
                    "description": "Get multivariate feature flag value for a user.",
                    "details": "",
                    "category": "Feature Flags",
                    "examples": [
                        {
                            "id": "example_1",
                            "name": "Example 1",
                            "code": "enabled_variant = posthog.get_feature_flag('flag-key', 'distinct_id_of_your_user')\n\nif enabled_variant == 'variant-key': # replace 'variant-key' with the key of your variant\n    # Do something differently for this user\n    # Optional: fetch the payload\n    matched_flag_payload = posthog.get_feature_flag_payload('flag-key', 'distinct_id_of_your_user')"
                        }
                    ],
                    "params": [
                        {
                            "name": "key",
                            "description": "The feature flag key.",
                            "isOptional": false,
                            "type": "any"
                        },
                        {
                            "name": "distinct_id",
                            "description": "The distinct ID of the user.",
                            "isOptional": false,
                            "type": "any"
                        },
                        {
                            "name": "groups",
                            "description": "A dictionary of group information.",
                            "isOptional": true,
                            "type": "dict"
                        },
                        {
                            "name": "person_properties",
                            "description": "A dictionary of person properties.",
                            "isOptional": true,
                            "type": "dict"
                        },
                        {
                            "name": "group_properties",
                            "description": "A dictionary of group properties.",
                            "isOptional": true,
                            "type": "dict"
                        },
                        {
                            "name": "only_evaluate_locally",
                            "description": "Whether to only evaluate locally.",
                            "isOptional": true,
                            "type": "bool"
                        },
                        {
                            "name": "send_feature_flag_events",
                            "description": "Whether to send feature flag events.",
                            "isOptional": true,
                            "type": "bool"
                        },
                        {
                            "name": "disable_geoip",
                            "description": "Whether to disable GeoIP for this request.",
                            "isOptional": true,
                            "type": "any"
                        }
                    ],
                    "showDocs": true,
                    "releaseTag": "public",
                    "returnType": {
                        "id": "return_type",
                        "name": "Union[bool, str, any]"
                    }
                },
                {
                    "id": "get_feature_flag_payload",
                    "title": "get_feature_flag_payload",
                    "description": "Get the payload for a feature flag.",
                    "details": "",
                    "category": "Feature Flags",
                    "examples": [
                        {
                            "id": "example_1",
                            "name": "Example 1",
                            "code": "is_my_flag_enabled = posthog.feature_enabled('flag-key', 'distinct_id_of_your_user')\n\nif is_my_flag_enabled:\n    # Do something differently for this user\n    # Optional: fetch the payload\n    matched_flag_payload = posthog.get_feature_flag_payload('flag-key', 'distinct_id_of_your_user')"
                        }
                    ],
                    "params": [
                        {
                            "name": "key",
                            "description": "The feature flag key.",
                            "isOptional": false,
                            "type": "any"
                        },
                        {
                            "name": "distinct_id",
                            "description": "The distinct ID of the user.",
                            "isOptional": false,
                            "type": "any"
                        },
                        {
                            "name": "match_value",
                            "description": "The specific flag value to get payload for.",
                            "isOptional": true,
                            "type": "bool"
                        },
                        {
                            "name": "groups",
                            "description": "A dictionary of group information.",
                            "isOptional": true,
                            "type": "dict"
                        },
                        {
                            "name": "person_properties",
                            "description": "A dictionary of person properties.",
                            "isOptional": true,
                            "type": "dict"
                        },
                        {
                            "name": "group_properties",
                            "description": "A dictionary of group properties.",
                            "isOptional": true,
                            "type": "dict"
                        },
                        {
                            "name": "only_evaluate_locally",
                            "description": "Whether to only evaluate locally.",
                            "isOptional": true,
                            "type": "bool"
                        },
                        {
                            "name": "send_feature_flag_events",
                            "description": "Whether to send feature flag events.",
                            "isOptional": true,
                            "type": "bool"
                        },
                        {
                            "name": "disable_geoip",
                            "description": "Whether to disable GeoIP for this request.",
                            "isOptional": true,
                            "type": "any"
                        }
                    ],
                    "showDocs": true,
                    "releaseTag": "public",
                    "returnType": {
                        "id": "return_type",
                        "name": "void"
                    }
                },
                {
                    "id": "get_feature_flag_result",
                    "title": "get_feature_flag_result",
                    "description": "Get a FeatureFlagResult object",
                    "details": "",
                    "category": null,
                    "examples": [
                        {
                            "id": "generated_example_1",
                            "name": "Basic usage",
                            "code": "get_feature_flag_result(key=\"key_value\", distinct_id=\"distinct_id_value\")"
                        },
                        {
                            "id": "generated_example_2",
                            "name": "Advanced usage",
                            "code": "get_feature_flag_result(key=\"key_value\", distinct_id=\"distinct_id_value\", groups=\"groups_value\", person_properties=\"person_properties_value\", group_properties=\"group_properties_value\")"
                        }
                    ],
                    "params": [
                        {
                            "name": "key",
                            "description": "Parameter: key",
                            "isOptional": false,
                            "type": "any"
                        },
                        {
                            "name": "distinct_id",
                            "description": "Parameter: distinct_id",
                            "isOptional": false,
                            "type": "any"
                        },
                        {
                            "name": "groups",
                            "description": "Parameter: groups",
                            "isOptional": true,
                            "type": "dict"
                        },
                        {
                            "name": "person_properties",
                            "description": "Parameter: person_properties",
                            "isOptional": true,
                            "type": "dict"
                        },
                        {
                            "name": "group_properties",
                            "description": "Parameter: group_properties",
                            "isOptional": true,
                            "type": "dict"
                        },
                        {
                            "name": "only_evaluate_locally",
                            "description": "Parameter: only_evaluate_locally",
                            "isOptional": true,
                            "type": "bool"
                        },
                        {
                            "name": "send_feature_flag_events",
                            "description": "Parameter: send_feature_flag_events",
                            "isOptional": true,
                            "type": "bool"
                        },
                        {
                            "name": "disable_geoip",
                            "description": "Parameter: disable_geoip",
                            "isOptional": true,
                            "type": "any"
                        }
                    ],
                    "showDocs": true,
                    "releaseTag": "public",
                    "returnType": {
                        "id": "return_type",
                        "name": "Optional[FeatureFlagResult]"
                    }
                },
                {
                    "id": "get_feature_flags_and_payloads",
                    "title": "get_feature_flags_and_payloads",
                    "description": "Get feature flags and payloads for a user by calling decide.",
                    "details": "",
                    "category": "Feature Flags",
                    "examples": [
                        {
                            "id": "example_1",
                            "name": "Example 1",
                            "code": "result = posthog.get_feature_flags_and_payloads('<distinct_id>')"
                        }
                    ],
                    "params": [
                        {
                            "name": "distinct_id",
                            "description": "The distinct ID of the user.",
                            "isOptional": false,
                            "type": "any"
                        },
                        {
                            "name": "groups",
                            "description": "A dictionary of group information.",
                            "isOptional": true,
                            "type": "any"
                        },
                        {
                            "name": "person_properties",
                            "description": "A dictionary of person properties.",
                            "isOptional": true,
                            "type": "any"
                        },
                        {
                            "name": "group_properties",
                            "description": "A dictionary of group properties.",
                            "isOptional": true,
                            "type": "any"
                        },
                        {
                            "name": "disable_geoip",
                            "description": "Whether to disable GeoIP for this request.",
                            "isOptional": true,
                            "type": "any"
                        }
                    ],
                    "showDocs": true,
                    "releaseTag": "public",
                    "returnType": {
                        "id": "return_type",
                        "name": "FlagsAndPayloads"
                    }
                },
                {
                    "id": "get_feature_payloads",
                    "title": "get_feature_payloads",
                    "description": "Get feature flag payloads for a user by calling decide.",
                    "details": "",
                    "category": "Feature Flags",
                    "examples": [
                        {
                            "id": "example_1",
                            "name": "Example 1",
                            "code": "payloads = posthog.get_feature_payloads('<distinct_id>')"
                        }
                    ],
                    "params": [
                        {
                            "name": "distinct_id",
                            "description": "The distinct ID of the user.",
                            "isOptional": false,
                            "type": "any"
                        },
                        {
                            "name": "groups",
                            "description": "A dictionary of group information.",
                            "isOptional": true,
                            "type": "any"
                        },
                        {
                            "name": "person_properties",
                            "description": "A dictionary of person properties.",
                            "isOptional": true,
                            "type": "any"
                        },
                        {
                            "name": "group_properties",
                            "description": "A dictionary of group properties.",
                            "isOptional": true,
                            "type": "any"
                        },
                        {
                            "name": "disable_geoip",
                            "description": "Whether to disable GeoIP for this request.",
                            "isOptional": true,
                            "type": "any"
                        }
                    ],
                    "showDocs": true,
                    "releaseTag": "public",
                    "returnType": {
                        "id": "return_type",
                        "name": "dict[str, str]"
                    }
                },
                {
                    "id": "get_feature_variants",
                    "title": "get_feature_variants",
                    "description": "Get feature flag variants for a user by calling decide.",
                    "details": "",
                    "category": "Feature Flags",
                    "examples": [
                        {
                            "id": "example_1",
                            "name": "Example 1",
                            "code": "variants = posthog.get_feature_variants('<distinct_id>')"
                        }
                    ],
                    "params": [
                        {
                            "name": "distinct_id",
                            "description": "The distinct ID of the user.",
                            "isOptional": false,
                            "type": "any"
                        },
                        {
                            "name": "groups",
                            "description": "A dictionary of group information.",
                            "isOptional": true,
                            "type": "any"
                        },
                        {
                            "name": "person_properties",
                            "description": "A dictionary of person properties.",
                            "isOptional": true,
                            "type": "any"
                        },
                        {
                            "name": "group_properties",
                            "description": "A dictionary of group properties.",
                            "isOptional": true,
                            "type": "any"
                        },
                        {
                            "name": "disable_geoip",
                            "description": "Whether to disable GeoIP for this request.",
                            "isOptional": true,
                            "type": "any"
                        }
                    ],
                    "showDocs": true,
                    "releaseTag": "public",
                    "returnType": {
                        "id": "return_type",
                        "name": "dict[str, Union[bool, str]]"
                    }
                },
                {
                    "id": "get_flags_decision",
                    "title": "get_flags_decision",
                    "description": "Get feature flags decision.",
                    "details": "",
                    "category": "Feature Flags",
                    "examples": [
                        {
                            "id": "example_1",
                            "name": "Example 1",
                            "code": "decision = posthog.get_flags_decision('user123')"
                        }
                    ],
                    "params": [
                        {
                            "name": "distinct_id",
                            "description": "The distinct ID of the user.",
                            "isOptional": true,
                            "type": "Number"
                        },
                        {
                            "name": "groups",
                            "description": "A dictionary of group information.",
                            "isOptional": true,
                            "type": "dict"
                        },
                        {
                            "name": "person_properties",
                            "description": "A dictionary of person properties.",
                            "isOptional": true,
                            "type": "any"
                        },
                        {
                            "name": "group_properties",
                            "description": "A dictionary of group properties.",
                            "isOptional": true,
                            "type": "any"
                        },
                        {
                            "name": "disable_geoip",
                            "description": "Whether to disable GeoIP for this request.",
                            "isOptional": true,
                            "type": "any"
                        }
                    ],
                    "showDocs": true,
                    "releaseTag": "public",
                    "returnType": {
                        "id": "return_type",
                        "name": "FlagsResponse"
                    }
                },
                {
                    "id": "group_identify",
                    "title": "group_identify",
                    "description": "Identify a group and set its properties.",
                    "details": "",
                    "category": "Identification",
                    "examples": [
                        {
                            "id": "example_1",
                            "name": "Example 1",
                            "code": "posthog.group_identify('company', 'company_123', properties={'name': 'PostHog Inc.'})"
                        }
                    ],
                    "params": [
                        {
                            "name": "group_type",
                            "description": "The type of group (e.g., 'company', 'team').",
                            "isOptional": false,
                            "type": "str"
                        },
                        {
                            "name": "group_key",
                            "description": "The unique identifier for the group.",
                            "isOptional": false,
                            "type": "str"
                        },
                        {
                            "name": "properties",
                            "description": "A dictionary of properties to set on the group.",
                            "isOptional": true,
                            "type": "any"
                        },
                        {
                            "name": "timestamp",
                            "description": "The timestamp of the event.",
                            "isOptional": true,
                            "type": "any"
                        },
                        {
                            "name": "uuid",
                            "description": "A unique identifier for the event.",
                            "isOptional": true,
                            "type": "any"
                        },
                        {
                            "name": "disable_geoip",
                            "description": "Whether to disable GeoIP for this event.",
                            "isOptional": true,
                            "type": "any"
                        },
                        {
                            "name": "distinct_id",
                            "description": "The distinct ID of the user performing the action.",
                            "isOptional": true,
                            "type": "any"
                        }
                    ],
                    "showDocs": true,
                    "releaseTag": "public",
                    "returnType": {
                        "id": "return_type",
                        "name": "void"
                    }
                },
                {
                    "id": "join",
                    "title": "join",
                    "description": "End the consumer thread once the queue is empty. Do not use directly, call `shutdown()` instead.  Examples:     ```python     posthog.join()     ```",
                    "details": "",
                    "category": null,
                    "examples": [
                        {
                            "id": "example_1",
                            "name": "Example 1",
                            "code": "posthog.join()"
                        }
                    ],
                    "params": [],
                    "showDocs": true,
                    "releaseTag": "public",
                    "returnType": {
                        "id": "return_type",
                        "name": "void"
                    }
                },
                {
                    "id": "load_feature_flags",
                    "title": "load_feature_flags",
                    "description": "Load feature flags for local evaluation.  Examples:     ```python     posthog.load_feature_flags()     ```  Category:     Feature Flags",
                    "details": "",
                    "category": "Feature Flags",
                    "examples": [
                        {
                            "id": "example_1",
                            "name": "Example 1",
                            "code": "posthog.load_feature_flags()"
                        }
                    ],
                    "params": [],
                    "showDocs": true,
                    "releaseTag": "public",
                    "returnType": {
                        "id": "return_type",
                        "name": "void"
                    }
                },
                {
                    "id": "new_context",
                    "title": "new_context",
                    "description": "Create a new context for managing shared state.",
                    "details": "",
                    "category": "Contexts",
                    "examples": [
                        {
                            "id": "example_1",
                            "name": "Example 1",
                            "code": "with posthog.new_context():\n    posthog.identify_context('<distinct_id>')\n    posthog.capture('event_name')"
                        }
                    ],
                    "params": [
                        {
                            "name": "fresh",
                            "description": "Whether to create a fresh context that doesn't inherit from parent.",
                            "isOptional": true,
                            "type": "bool"
                        },
                        {
                            "name": "capture_exceptions",
                            "description": "Whether to automatically capture exceptions in this context.",
                            "isOptional": true,
                            "type": "bool"
                        }
                    ],
                    "showDocs": true,
                    "releaseTag": "public",
                    "returnType": {
                        "id": "return_type",
                        "name": "void"
                    }
                },
                {
                    "id": "set",
                    "title": "set",
                    "description": "Set properties on a person profile.",
                    "details": "",
                    "category": "Identification",
                    "examples": [
                        {
                            "id": "example_1",
                            "name": "Example 1",
                            "code": "posthog.set(distinct_id='user123', properties={'name': 'John Doe'})"
                        }
                    ],
                    "params": [
                        {
                            "name": "kwargs",
                            "description": "Parameter: kwargs",
                            "isOptional": false,
                            "type": "Unpack[OptionalSetArgs]"
                        }
                    ],
                    "showDocs": true,
                    "releaseTag": "public",
                    "returnType": {
                        "id": "return_type",
                        "name": "Optional[str]"
                    }
                },
                {
                    "id": "set_once",
                    "title": "set_once",
                    "description": "Set properties on a person profile only if they haven't been set before.",
                    "details": "",
                    "category": "Identification",
                    "examples": [
                        {
                            "id": "example_1",
                            "name": "Example 1",
                            "code": "posthog.set_once(distinct_id='user123', properties={'initial_signup_date': '2024-01-01'})"
                        }
                    ],
                    "params": [
                        {
                            "name": "kwargs",
                            "description": "Parameter: kwargs",
                            "isOptional": false,
                            "type": "Unpack[OptionalSetArgs]"
                        }
                    ],
                    "showDocs": true,
                    "releaseTag": "public",
                    "returnType": {
                        "id": "return_type",
                        "name": "Optional[str]"
                    }
                },
                {
                    "id": "shutdown",
                    "title": "shutdown",
                    "description": "Flush all messages and cleanly shutdown the client. Call this before the process ends in serverless environments to avoid data loss.  Examples:     ```python     posthog.shutdown()     ```",
                    "details": "",
                    "category": null,
                    "examples": [
                        {
                            "id": "example_1",
                            "name": "Example 1",
                            "code": "posthog.shutdown()"
                        }
                    ],
                    "params": [],
                    "showDocs": true,
                    "releaseTag": "public",
                    "returnType": {
                        "id": "return_type",
                        "name": "void"
                    }
                }
            ]
        },
        {
            "id": "PostHogModule",
            "title": "PostHog Module Functions",
            "description": "Global functions available in the PostHog module",
            "functions": [
                {
                    "id": "alias",
                    "title": "alias",
                    "description": "Associate user behaviour before and after they e.g. register, login, or perform some other identifying action.",
                    "details": "To marry up whatever a user does before they sign up or log in with what they do after you need to make an alias call. This will allow you to answer questions like \"Which marketing channels leads to users churning after a month?\" or \"What do users do on our website before signing up?\". Particularly useful for associating user behaviour before and after they e.g. register, login, or perform some other identifying action.",
                    "category": "Identification",
                    "examples": [
                        {
                            "id": "example_1",
                            "name": "Example 1",
                            "code": "posthog.alias('anonymous session id', 'distinct id')"
                        }
                    ],
                    "params": [
                        {
                            "name": "previous_id",
                            "description": "The unique ID of the user before",
                            "isOptional": false,
                            "type": "any"
                        },
                        {
                            "name": "distinct_id",
                            "description": "The current unique id",
                            "isOptional": false,
                            "type": "any"
                        },
                        {
                            "name": "timestamp",
                            "description": "Optional timestamp for the event",
                            "isOptional": true,
                            "type": "any"
                        },
                        {
                            "name": "uuid",
                            "description": "Optional UUID for the event",
                            "isOptional": true,
                            "type": "any"
                        },
                        {
                            "name": "disable_geoip",
                            "description": "Whether to disable GeoIP lookup",
                            "isOptional": true,
                            "type": "any"
                        }
                    ],
                    "showDocs": true,
                    "releaseTag": "public",
                    "returnType": {
                        "id": "return_type",
                        "name": "void"
                    }
                },
                {
                    "id": "capture",
                    "title": "capture",
                    "description": "Capture anything a user does within your system.",
                    "details": "Capture allows you to capture anything a user does within your system, which you can later use in PostHog to find patterns in usage, work out which features to improve or where people are giving up. A capture call requires an event name to specify the event. We recommend using [verb] [noun], like `movie played` or `movie updated` to easily identify what your events mean later on. Capture takes a number of optional arguments, which are defined by the `OptionalCaptureArgs` type.",
                    "category": "Events",
                    "examples": [
                        {
                            "id": "example_1",
                            "name": "Enter a new context (e.g. a request/response cycle, an instance of a background job, etc)",
                            "code": "# Enter a new context (e.g. a request/response cycle, an instance of a background job, etc)\nwith posthog.new_context():\n    # Associate this context with some user, by distinct_id\n    posthog.identify_context('some user')\n\n    # Capture an event, associated with the context-level distinct ID ('some user')\n    posthog.capture('movie started')\n\n    # Capture an event associated with some other user (overriding the context-level distinct ID)\n    posthog.capture('movie joined', distinct_id='some-other-user')\n\n    # Capture an event with some properties\n    posthog.capture('movie played', properties={'movie_id': '123', 'category': 'romcom'})\n\n    # Capture an event with some properties\n    posthog.capture('purchase', properties={'product_id': '123', 'category': 'romcom'})\n    # Capture an event with some associated group\n    posthog.capture('purchase', groups={'company': 'id:5'})\n\n    # Adding a tag to the current context will cause it to appear on all subsequent events\n    posthog.tag_context('some-tag', 'some-value')\n\n    posthog.capture('another-event') # Will be captured with `'some-tag': 'some-value'` in the properties dict"
                        }
                    ],
                    "params": [
                        {
                            "name": "event",
                            "description": "The event name to specify the event",
                            "isOptional": false,
                            "type": "str"
                        },
                        {
                            "name": "kwargs",
                            "description": "Parameter: kwargs",
                            "isOptional": false,
                            "type": "Unpack[OptionalCaptureArgs]"
                        }
                    ],
                    "showDocs": true,
                    "releaseTag": "public",
                    "returnType": {
                        "id": "return_type",
                        "name": "Optional[str]"
                    }
                },
                {
                    "id": "capture_exception",
                    "title": "capture_exception",
                    "description": "Capture exceptions that happen in your code.",
                    "details": "Capture exception is idempotent - if it is called twice with the same exception instance, only a occurrence will be tracked in posthog. This is because, generally, contexts will cause exceptions to be captured automatically. However, to ensure you track an exception, if you catch and do not re-raise it, capturing it manually is recommended, unless you are certain it will have crossed a context boundary (e.g. by existing a `with posthog.new_context():` block already). If the passed exception was raised and caught, the captured stack trace will consist of every frame between where the exception was raised and the point at which it is captured (the \"traceback\"). If the passed exception was never raised, e.g. if you call `posthog.capture_exception(ValueError(\"Some Error\"))`, the stack trace captured will be the full stack trace at the moment the exception was captured. Note that heavy use of contexts will lead to truncated stack traces, as the exception will be captured by the context entered most recently, which may not be the point you catch the exception for the final time in your code. It's recommended to use contexts sparingly, for this reason. `capture_exception` takes the same set of optional arguments as `capture`.",
                    "category": "Events",
                    "examples": [
                        {
                            "id": "example_1",
                            "name": "Example 1",
                            "code": "try:\n    risky_operation()\nexcept Exception as e:\n    posthog.capture_exception(e)"
                        }
                    ],
                    "params": [
                        {
                            "name": "exception",
                            "description": "The exception to capture. If not provided, the current exception is captured via `sys.exc_info()`",
                            "isOptional": true,
                            "type": "BaseException"
                        },
                        {
                            "name": "kwargs",
                            "description": "Parameter: kwargs",
                            "isOptional": false,
                            "type": "Unpack[OptionalCaptureArgs]"
                        }
                    ],
                    "showDocs": true,
                    "releaseTag": "public",
                    "returnType": {
                        "id": "return_type",
                        "name": "void"
                    }
                },
                {
                    "id": "feature_enabled",
                    "title": "feature_enabled",
                    "description": "Use feature flags to enable or disable features for users.",
                    "details": "You can call `posthog.load_feature_flags()` before to make sure you're not doing unexpected requests.",
                    "category": "Feature flags",
                    "examples": [
                        {
                            "id": "example_1",
                            "name": "Example 1",
                            "code": "if posthog.feature_enabled('beta feature', 'distinct id'):\n    # do something"
                        },
                        {
                            "id": "example_2",
                            "name": "Example 2",
                            "code": "if posthog.feature_enabled('groups feature', 'distinct id', groups={\"organization\": \"5\"}):\n    # do something"
                        }
                    ],
                    "params": [
                        {
                            "name": "key",
                            "description": "The feature flag key",
                            "isOptional": false,
                            "type": "any"
                        },
                        {
                            "name": "distinct_id",
                            "description": "The user's distinct ID",
                            "isOptional": false,
                            "type": "any"
                        },
                        {
                            "name": "groups",
                            "description": "Groups mapping",
                            "isOptional": true,
                            "type": "dict"
                        },
                        {
                            "name": "person_properties",
                            "description": "Person properties",
                            "isOptional": true,
                            "type": "dict"
                        },
                        {
                            "name": "group_properties",
                            "description": "Group properties",
                            "isOptional": true,
                            "type": "dict"
                        },
                        {
                            "name": "only_evaluate_locally",
                            "description": "Whether to evaluate only locally",
                            "isOptional": true,
                            "type": "bool"
                        },
                        {
                            "name": "send_feature_flag_events",
                            "description": "Whether to send feature flag events",
                            "isOptional": true,
                            "type": "bool"
                        },
                        {
                            "name": "disable_geoip",
                            "description": "Whether to disable GeoIP lookup",
                            "isOptional": true,
                            "type": "any"
                        }
                    ],
                    "showDocs": true,
                    "releaseTag": "public",
                    "returnType": {
                        "id": "return_type",
                        "name": "void"
                    }
                },
                {
                    "id": "feature_flag_definitions",
                    "title": "feature_flag_definitions",
                    "description": "Returns loaded feature flags.  Details:     Returns loaded feature flags, if any. Helpful for debugging what flag information you have loaded.  Examples:     ```python     definitions = posthog.feature_flag_definitions()     ```  Category:     Feature flags",
                    "details": "Returns loaded feature flags, if any. Helpful for debugging what flag information you have loaded.",
                    "category": "Feature flags",
                    "examples": [
                        {
                            "id": "example_1",
                            "name": "Example 1",
                            "code": "definitions = posthog.feature_flag_definitions()"
                        }
                    ],
                    "params": [],
                    "showDocs": true,
                    "releaseTag": "public",
                    "returnType": {
                        "id": "return_type",
                        "name": "void"
                    }
                },
                {
                    "id": "flush",
                    "title": "flush",
                    "description": "Tell the client to flush.  Examples:     ```python     posthog.flush()     ```  Category:     Client management",
                    "details": "",
                    "category": "Client management",
                    "examples": [
                        {
                            "id": "example_1",
                            "name": "Example 1",
                            "code": "posthog.flush()"
                        }
                    ],
                    "params": [],
                    "showDocs": true,
                    "releaseTag": "public",
                    "returnType": {
                        "id": "return_type",
                        "name": "void"
                    }
                },
                {
                    "id": "get_all_flags",
                    "title": "get_all_flags",
                    "description": "Get all flags for a given user.",
                    "details": "Flags are key-value pairs where the key is the flag key and the value is the flag variant, or True, or False.",
                    "category": "Feature flags",
                    "examples": [
                        {
                            "id": "example_1",
                            "name": "Example 1",
                            "code": "flags = posthog.get_all_flags('distinct_id')"
                        }
                    ],
                    "params": [
                        {
                            "name": "distinct_id",
                            "description": "The user's distinct ID",
                            "isOptional": false,
                            "type": "any"
                        },
                        {
                            "name": "groups",
                            "description": "Groups mapping",
                            "isOptional": true,
                            "type": "dict"
                        },
                        {
                            "name": "person_properties",
                            "description": "Person properties",
                            "isOptional": true,
                            "type": "dict"
                        },
                        {
                            "name": "group_properties",
                            "description": "Group properties",
                            "isOptional": true,
                            "type": "dict"
                        },
                        {
                            "name": "only_evaluate_locally",
                            "description": "Whether to evaluate only locally",
                            "isOptional": true,
                            "type": "bool"
                        },
                        {
                            "name": "disable_geoip",
                            "description": "Whether to disable GeoIP lookup",
                            "isOptional": true,
                            "type": "any"
                        }
                    ],
                    "showDocs": true,
                    "releaseTag": "public",
                    "returnType": {
                        "id": "return_type",
                        "name": "Optional[dict[str, FeatureFlag]]"
                    }
                },
                {
                    "id": "get_feature_flag",
                    "title": "get_feature_flag",
                    "description": "Get feature flag variant for users. Used with experiments.",
                    "details": "`groups` are a mapping from group type to group key. So, if you have a group type of \"organization\" and a group key of \"5\", you would pass groups={\"organization\": \"5\"}. `group_properties` take the format: { group_type_name: { group_properties } }. So, for example, if you have the group type \"organization\" and the group key \"5\", with the properties name, and employee count, you'll send these as: group_properties={\"organization\": {\"name\": \"PostHog\", \"employees\": 11}}.",
                    "category": "Feature flags",
                    "examples": [
                        {
                            "id": "example_1",
                            "name": "Example 1",
                            "code": "if posthog.get_feature_flag('beta-feature', 'distinct_id') == 'test-variant':\n    # do test variant code"
                        },
                        {
                            "id": "example_2",
                            "name": "Example 2",
                            "code": "if posthog.get_feature_flag('beta-feature', 'distinct_id') == 'control':\n    # do control code"
                        }
                    ],
                    "params": [
                        {
                            "name": "key",
                            "description": "The feature flag key",
                            "isOptional": false,
                            "type": "any"
                        },
                        {
                            "name": "distinct_id",
                            "description": "The user's distinct ID",
                            "isOptional": false,
                            "type": "any"
                        },
                        {
                            "name": "groups",
                            "description": "Groups mapping from group type to group key",
                            "isOptional": true,
                            "type": "dict"
                        },
                        {
                            "name": "person_properties",
                            "description": "Person properties",
                            "isOptional": true,
                            "type": "dict"
                        },
                        {
                            "name": "group_properties",
                            "description": "Group properties in format { group_type_name: { group_properties } }",
                            "isOptional": true,
                            "type": "dict"
                        },
                        {
                            "name": "only_evaluate_locally",
                            "description": "Whether to evaluate only locally",
                            "isOptional": true,
                            "type": "bool"
                        },
                        {
                            "name": "send_feature_flag_events",
                            "description": "Whether to send feature flag events",
                            "isOptional": true,
                            "type": "bool"
                        },
                        {
                            "name": "disable_geoip",
                            "description": "Whether to disable GeoIP lookup",
                            "isOptional": true,
                            "type": "any"
                        }
                    ],
                    "showDocs": true,
                    "releaseTag": "public",
                    "returnType": {
                        "id": "return_type",
                        "name": "Optional[FeatureFlag]"
                    }
                },
                {
                    "id": "get_remote_config_payload",
                    "title": "get_remote_config_payload",
                    "description": "Get the payload for a remote config feature flag.",
                    "details": "",
                    "category": null,
                    "examples": [
                        {
                            "id": "generated_example_1",
                            "name": "Basic usage",
                            "code": "get_remote_config_payload(key=\"key_value\")"
                        }
                    ],
                    "params": [
                        {
                            "name": "key",
                            "description": "The key of the feature flag",
                            "isOptional": false,
                            "type": "any"
                        }
                    ],
                    "showDocs": true,
                    "releaseTag": "public",
                    "returnType": {
                        "id": "return_type",
                        "name": "void"
                    }
                },
                {
                    "id": "group_identify",
                    "title": "group_identify",
                    "description": "Set properties on a group.",
                    "details": "",
                    "category": "Identification",
                    "examples": [
                        {
                            "id": "example_1",
                            "name": "Example 1",
                            "code": "posthog.group_identify('company', 5, {\n    'employees': 11,\n})"
                        }
                    ],
                    "params": [
                        {
                            "name": "group_type",
                            "description": "Type of your group",
                            "isOptional": false,
                            "type": "any"
                        },
                        {
                            "name": "group_key",
                            "description": "Unique identifier of the group",
                            "isOptional": false,
                            "type": "any"
                        },
                        {
                            "name": "properties",
                            "description": "Properties to set on the group",
                            "isOptional": true,
                            "type": "any"
                        },
                        {
                            "name": "timestamp",
                            "description": "Optional timestamp for the event",
                            "isOptional": true,
                            "type": "any"
                        },
                        {
                            "name": "uuid",
                            "description": "Optional UUID for the event",
                            "isOptional": true,
                            "type": "any"
                        },
                        {
                            "name": "disable_geoip",
                            "description": "Whether to disable GeoIP lookup",
                            "isOptional": true,
                            "type": "any"
                        }
                    ],
                    "showDocs": true,
                    "releaseTag": "public",
                    "returnType": {
                        "id": "return_type",
                        "name": "void"
                    }
                },
                {
                    "id": "identify_context",
                    "title": "identify_context",
                    "description": "Identify the current context with a distinct ID.",
                    "details": "",
                    "category": "Identification",
                    "examples": [
                        {
                            "id": "example_1",
                            "name": "Example 1",
                            "code": "posthog.identify_context(\"user_123\")"
                        }
                    ],
                    "params": [
                        {
                            "name": "distinct_id",
                            "description": "The distinct ID to associate with the current context and its children",
                            "isOptional": false,
                            "type": "str"
                        }
                    ],
                    "showDocs": true,
                    "releaseTag": "public",
                    "returnType": {
                        "id": "return_type",
                        "name": "void"
                    }
                },
                {
                    "id": "join",
                    "title": "join",
                    "description": "Block program until the client clears the queue.  Examples:     ```python     posthog.join()     ```  Category:     Client management",
                    "details": "",
                    "category": "Client management",
                    "examples": [
                        {
                            "id": "example_1",
                            "name": "Example 1",
                            "code": "posthog.join()"
                        }
                    ],
                    "params": [],
                    "showDocs": true,
                    "releaseTag": "public",
                    "returnType": {
                        "id": "return_type",
                        "name": "void"
                    }
                },
                {
                    "id": "load_feature_flags",
                    "title": "load_feature_flags",
                    "description": "Load feature flag definitions from PostHog.  Examples:     ```python     posthog.load_feature_flags()     ```  Category:     Feature flags",
                    "details": "",
                    "category": "Feature flags",
                    "examples": [
                        {
                            "id": "example_1",
                            "name": "Example 1",
                            "code": "posthog.load_feature_flags()"
                        }
                    ],
                    "params": [],
                    "showDocs": true,
                    "releaseTag": "public",
                    "returnType": {
                        "id": "return_type",
                        "name": "void"
                    }
                },
                {
                    "id": "new_context",
                    "title": "new_context",
                    "description": "Create a new context scope that will be active for the duration of the with block.",
                    "details": "",
                    "category": "Contexts",
                    "examples": [
                        {
                            "id": "example_1",
                            "name": "Example 1",
                            "code": "with posthog.new_context():\n    posthog.tag(\"request_id\", \"123\")\n    posthog.capture(\"event_name\", properties={\"property\": \"value\"})"
                        }
                    ],
                    "params": [
                        {
                            "name": "fresh",
                            "description": "Whether to start with a fresh context (default: False)",
                            "isOptional": true,
                            "type": "bool"
                        },
                        {
                            "name": "capture_exceptions",
                            "description": "Whether to capture exceptions raised within the context (default: True)",
                            "isOptional": true,
                            "type": "bool"
                        }
                    ],
                    "showDocs": true,
                    "releaseTag": "public",
                    "returnType": {
                        "id": "return_type",
                        "name": "void"
                    }
                },
                {
                    "id": "scoped",
                    "title": "scoped",
                    "description": "Decorator that creates a new context for the function.",
                    "details": "",
                    "category": "Contexts",
                    "examples": [
                        {
                            "id": "example_1",
                            "name": "Example 1",
                            "code": "@posthog.scoped()\ndef process_payment(payment_id):\n    posthog.tag(\"payment_id\", payment_id)\n    posthog.capture(\"payment_started\")"
                        }
                    ],
                    "params": [
                        {
                            "name": "fresh",
                            "description": "Whether to start with a fresh context (default: False)",
                            "isOptional": true,
                            "type": "bool"
                        },
                        {
                            "name": "capture_exceptions",
                            "description": "Whether to capture and track exceptions with posthog error tracking (default: True)",
                            "isOptional": true,
                            "type": "bool"
                        }
                    ],
                    "showDocs": true,
                    "releaseTag": "public",
                    "returnType": {
                        "id": "return_type",
                        "name": "void"
                    }
                },
                {
                    "id": "set",
                    "title": "set",
                    "description": "Set properties on a user record.  Details:     This will overwrite previous people property values. Generally operates similar to `capture`, with distinct_id being an optional argument, defaulting to the current context's distinct ID. If there is no context-level distinct ID, and no override distinct_id is passed, this function will do nothing. Context tags are folded into $set properties, so tagging the current context and then calling `set` will cause those tags to be set on the user (unlike capture, which causes them to just be set on the event).  Examples:     ```python     posthog.set(distinct_id='distinct id', properties={         'current_browser': 'Chrome',     })     ```  Category:     Identification",
                    "details": "This will overwrite previous people property values. Generally operates similar to `capture`, with distinct_id being an optional argument, defaulting to the current context's distinct ID. If there is no context-level distinct ID, and no override distinct_id is passed, this function will do nothing. Context tags are folded into $set properties, so tagging the current context and then calling `set` will cause those tags to be set on the user (unlike capture, which causes them to just be set on the event).",
                    "category": "Identification",
                    "examples": [
                        {
                            "id": "example_1",
                            "name": "Example 1",
                            "code": "posthog.set(distinct_id='distinct id', properties={\n    'current_browser': 'Chrome',\n})"
                        }
                    ],
                    "params": [
                        {
                            "name": "kwargs",
                            "description": "Parameter: kwargs",
                            "isOptional": false,
                            "type": "Unpack[OptionalSetArgs]"
                        }
                    ],
                    "showDocs": true,
                    "releaseTag": "public",
                    "returnType": {
                        "id": "return_type",
                        "name": "Optional[str]"
                    }
                },
                {
                    "id": "set_context_session",
                    "title": "set_context_session",
                    "description": "Set the session ID for the current context.",
                    "details": "",
                    "category": "Contexts",
                    "examples": [
                        {
                            "id": "example_1",
                            "name": "Example 1",
                            "code": "posthog.set_context_session(\"session_123\")"
                        }
                    ],
                    "params": [
                        {
                            "name": "session_id",
                            "description": "The session ID to associate with the current context and its children",
                            "isOptional": false,
                            "type": "str"
                        }
                    ],
                    "showDocs": true,
                    "releaseTag": "public",
                    "returnType": {
                        "id": "return_type",
                        "name": "void"
                    }
                },
                {
                    "id": "set_once",
                    "title": "set_once",
                    "description": "Set properties on a user record, only if they do not yet exist.  Details:     This will not overwrite previous people property values, unlike `set`. Otherwise, operates in an identical manner to `set`.  Examples:     ```python     posthog.set_once(distinct_id='user_123', properties={         'first_seen': '2023-01-01',     })     ```  Category:     Identification",
                    "details": "This will not overwrite previous people property values, unlike `set`. Otherwise, operates in an identical manner to `set`.",
                    "category": "Identification",
                    "examples": [
                        {
                            "id": "example_1",
                            "name": "Example 1",
                            "code": "posthog.set_once(distinct_id='user_123', properties={\n    'first_seen': '2023-01-01',\n})"
                        }
                    ],
                    "params": [
                        {
                            "name": "kwargs",
                            "description": "Parameter: kwargs",
                            "isOptional": false,
                            "type": "Unpack[OptionalSetArgs]"
                        }
                    ],
                    "showDocs": true,
                    "releaseTag": "public",
                    "returnType": {
                        "id": "return_type",
                        "name": "Optional[str]"
                    }
                },
                {
                    "id": "shutdown",
                    "title": "shutdown",
                    "description": "Flush all messages and cleanly shutdown the client.  Examples:     ```python     posthog.shutdown()     ```  Category:     Client management",
                    "details": "",
                    "category": "Client management",
                    "examples": [
                        {
                            "id": "example_1",
                            "name": "Example 1",
                            "code": "posthog.shutdown()"
                        }
                    ],
                    "params": [],
                    "showDocs": true,
                    "releaseTag": "public",
                    "returnType": {
                        "id": "return_type",
                        "name": "void"
                    }
                },
                {
                    "id": "tag",
                    "title": "tag",
                    "description": "Add a tag to the current context.",
                    "details": "",
                    "category": "Contexts",
                    "examples": [
                        {
                            "id": "example_1",
                            "name": "Example 1",
                            "code": "posthog.tag(\"user_id\", \"123\")"
                        }
                    ],
                    "params": [
                        {
                            "name": "name",
                            "description": "The tag key",
                            "isOptional": false,
                            "type": "str"
                        },
                        {
                            "name": "value",
                            "description": "The tag value",
                            "isOptional": false,
                            "type": "Any"
                        }
                    ],
                    "showDocs": true,
                    "releaseTag": "public",
                    "returnType": {
                        "id": "return_type",
                        "name": "void"
                    }
                }
            ]
        }
    ]
}
